/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package storeaccountpassword;

import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.io.InputStream;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author adittachakraborty
 */
public final class DeleteMember extends javax.swing.JFrame {

    int xMouse;
    int yMouse;
    static int userId;


    /**
     * Creates new form DeleteMember
     * @param userId
     */
    public DeleteMember(int userId) {
        initComponents();
        DeleteMember.userId = userId;
        ComboBox();
        usernameComboBoxItemStateChanged(null);
        JFrameIcon();
    }

    //Setting an Icon for jFrame
    void JFrameIcon() {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Icons/password.png")));
    }

    ArrayList<Integer> showId = new ArrayList<>();
    ArrayList<String> comboData = new ArrayList<>();
    HashMap<String, Integer> map = new HashMap<>();

    public void ComboBox() {
        try {
            DbClass.createCon();
            String query = "SELECT * from Registration";
            DbClass.pst = DbClass.con.prepareStatement(query);
            DbClass.rs = DbClass.pst.executeQuery();

            while (DbClass.rs.next()) {
                map.put(DbClass.rs.getString("Username"), DbClass.rs.getInt(1));
                showId.add(DbClass.rs.getInt(1));
                comboData.add(DbClass.rs.getString("Username"));

                Collections.sort(comboData);
            }
            usernameComboBox.setModel(new DefaultComboBoxModel(comboData.toArray()));
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error To Get Username", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    void ProfilePictureTableRemoveMember() {
        try {
            String username = usernameComboBox.getSelectedItem().toString();
            int idValue = map.get(username);

            DbClass.createCon();
            String query = "DELETE FROM ProfilePicture WHERE Id = " + idValue;
            DbClass.pst = DbClass.con.prepareStatement(query);
            DbClass.pst.executeUpdate();
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this, "Profile Picture Table Remove Member Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    void RegistrationTableRemoveMember() {
        try {
            String username = usernameComboBox.getSelectedItem().toString();
            int idValue = map.get(username);

            DbClass.createCon();
            String query = "DELETE FROM Registration WHERE Id = " + idValue;
            DbClass.pst = DbClass.con.prepareStatement(query);
            DbClass.pst.executeUpdate();
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this, "Registration Table Remove Member Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        usernameComboBox = new javax.swing.JComboBox<>();
        btnDelete = new javax.swing.JButton();
        labelpic = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Delete Member");
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel2.setText("Select Member");

        usernameComboBox.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        usernameComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                usernameComboBoxItemStateChanged(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Monaco", 0, 18)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-delete_sign.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        labelpic.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        labelpic.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(usernameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(labelpic, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(btnDelete)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(labelpic, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
void idChecker() {
        try {
            DbClass.createCon();
            String query = "SELECT id FROM Registration where Id = " + userId;
            DbClass.pst = DbClass.con.prepareStatement(query);
            DbClass.rs = DbClass.pst.executeQuery();
            while (DbClass.rs.next()) {
                int id = DbClass.rs.getInt(1);
                System.out.println(id);
                if (id == userId) {
                    JOptionPane.showMessageDialog(this, "Software Will Be Closed.");
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Id Not Found");
        }
    }
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int a = JOptionPane.showConfirmDialog(this, "Do you want to Delete?", "Delete User", JOptionPane.YES_NO_CANCEL_OPTION);
        if (a == 0) {
            RegistrationTableRemoveMember();
            ProfilePictureTableRemoveMember();
            JOptionPane.showMessageDialog(this, "Member Removed");
            idChecker();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void usernameComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_usernameComboBoxItemStateChanged
        String name = usernameComboBox.getSelectedItem().toString();
        int idValue = map.get(name);
        String query = "select Picture from PROFILEPICTURE where id=" + idValue;
        try {
            DbClass.createCon();
            DbClass.createSt();
            DbClass.rs2 = DbClass.st.executeQuery(query);
            DbClass.rs2.next();
            try {
                InputStream inst = DbClass.rs2.getBinaryStream(1);
                Image im = ImageIO.read(inst);
                labelpic.setIcon(new ImageIcon(im.getScaledInstance(labelpic.getWidth(), labelpic.getHeight(), Image.SCALE_SMOOTH)));
            } catch (IOException | SQLException e) {
                JOptionPane.showMessageDialog(this, "Profile Picture Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                ImageIcon myImage = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Icons/icons8-user_shield.png")));
                Image img1 = myImage.getImage();
                Image img2 = img1.getScaledInstance(labelpic.getWidth(), labelpic.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon i = new ImageIcon(img2);
                labelpic.setIcon(i);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error In ComboBox State Changing", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_usernameComboBoxItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.bernstein.BernsteinLookAndFeel");
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException e) {
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new DeleteMember(userId).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelpic;
    private javax.swing.JComboBox<String> usernameComboBox;
    // End of variables declaration//GEN-END:variables
}
