/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package storeaccountpassword;

import com.github.sarxos.webcam.Webcam;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintStream;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.Scanner;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author adittachakraborty
 */
public final class SignInSignOut extends javax.swing.JFrame {

    int xMouse;
    int yMouse;
    
    String filename = null;
    BufferedImage image2 = null;
    File f = null;
    File filePath = new File(System.getProperty("user.home") + "/Desktop/Login Data.txt");

    /**
     * Creates new form SignInSignOut
     */
    public SignInSignOut() {
        initComponents();
        JFrameIcon();
    }

    //Setting an Icon for jFrame
    private void JFrameIcon() {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Icons/password.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        regUsername = new javax.swing.JTextField();
        regEmailAddress = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        regConfirmPassword = new javax.swing.JPasswordField();
        regPassword = new javax.swing.JPasswordField();
        regPhoneNumber = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        btnSignUp = new javax.swing.JButton();
        btnAttachImage = new javax.swing.JButton();
        labelpic = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnCaptureImage = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        uniqueUsername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        jCheckBox1 = new javax.swing.JCheckBox();
        RememberMe = new javax.swing.JCheckBox();
        btnLogin = new javax.swing.JButton();
        btnForgottenPassword = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login & Registration");
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monaco", 1, 24))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel5.setText("Username");

        regUsername.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N

        regEmailAddress.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel7.setText("Phone Number");

        jLabel6.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel6.setText("Email Address");

        jLabel8.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel8.setText("Password");

        jLabel9.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel9.setText("Confirm Password");

        regConfirmPassword.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N

        regPassword.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N

        regPhoneNumber.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        regPhoneNumber.setActionCommand("<Not Set>");
        regPhoneNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                regPhoneNumberKeyTyped(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-recurring_appointment.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnSignUp.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        btnSignUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-thumb_up.png"))); // NOI18N
        btnSignUp.setText("Sign Up");
        btnSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignUpActionPerformed(evt);
            }
        });

        btnAttachImage.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        btnAttachImage.setText("Attach Image");
        btnAttachImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAttachImageActionPerformed(evt);
            }
        });

        labelpic.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        labelpic.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel13.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel13.setText("Profile Picture");

        btnCaptureImage.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        btnCaptureImage.setText("Capture Image");
        btnCaptureImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaptureImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(btnReset)
                        .addGap(61, 61, 61)
                        .addComponent(btnSignUp)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel13))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAttachImage, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCaptureImage))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(regEmailAddress)
                                .addComponent(regPhoneNumber)
                                .addComponent(regPassword)
                                .addComponent(regConfirmPassword)
                                .addComponent(regUsername)))
                        .addGap(25, 25, 25))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addComponent(labelpic, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(187, 187, 187))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(labelpic, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAttachImage)
                    .addComponent(btnCaptureImage))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(regUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(regEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(regPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(regPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(regConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset)
                    .addComponent(btnSignUp))
                .addGap(20, 20, 20))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Login", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monaco", 1, 24))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel1.setText("Username Or Email Address");

        uniqueUsername.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        uniqueUsername.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel2.setText("Password");

        password.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFocusGained(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jCheckBox1.setText("Show Password");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        RememberMe.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        RememberMe.setText("Remember Me (Email Login Only)");

        btnLogin.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        btnLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-ok.png"))); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnForgottenPassword.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        btnForgottenPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-privacy.png"))); // NOI18N
        btnForgottenPassword.setText("Forgotten Password");
        btnForgottenPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForgottenPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RememberMe)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(btnLogin))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnForgottenPassword))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jCheckBox1)
                        .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addComponent(uniqueUsername)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(uniqueUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jCheckBox1)
                .addGap(30, 30, 30)
                .addComponent(RememberMe)
                .addGap(30, 30, 30)
                .addComponent(btnLogin)
                .addGap(30, 30, 30)
                .addComponent(btnForgottenPassword)
                .addGap(37, 37, 37))
        );

        jLabel10.setFont(new java.awt.Font("Monaco", 0, 12)); // NOI18N
        jLabel10.setText("Copyright © Aditta's Education Centre 2019");

        jLabel11.setFont(new java.awt.Font("Monaco", 0, 12)); // NOI18N
        jLabel11.setText("Version 1.O");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(10, 10, 10))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void regPhoneNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_regPhoneNumberKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_regPhoneNumberKeyTyped

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        regUsername.setText(null);
        regEmailAddress.setText(null);
        regPhoneNumber.setText(null);
        regPassword.setText(null);
        regConfirmPassword.setText(null);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignUpActionPerformed
        if (labelpic.getIcon() == null || regUsername.getText().equals("") || regEmailAddress.getText().equals("") || regPassword.getPassword().equals("") || regConfirmPassword.getPassword().equals("") || regPhoneNumber.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "All fields are required");
        } else {
            try {
                DbClass.createCon();
                String query2 = "Select * from registration where username = '" + regUsername + "'";
                DbClass.pst = DbClass.con.prepareStatement(query2);
                DbClass.rs = DbClass.pst.executeQuery();
                if (DbClass.rs.next()) {
                    JOptionPane.showMessageDialog(this, "Username already exists\nEnter unique username", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    try {
                        String query = "insert into registration (username, email, password, phoneNumber) values (?,?,?,?)";
                        DbClass.pst = DbClass.con.prepareStatement(query);

                        if (Pattern.matches("^[a-zA-Z]+$", regUsername.getText())) {
                            //Aditta
                            DbClass.pst.setString(1, regUsername.getText());
                        } else if (Pattern.matches("^[a-zA-Z]+[ ]{1}+[a-zA-Z]+$", regUsername.getText())) {
                            //Aditta Chakraborty
                            DbClass.pst.setString(1, regUsername.getText());
                        } else if (Pattern.matches("^[a-zA-Z]+[ ]+[a-zA-Z]+[ ]{1}+[a-zA-Z]+$", regUsername.getText())) {
                            //AC Aditta Chakraborty
                            DbClass.pst.setString(1, regUsername.getText());
                        } else {
                            JOptionPane.showMessageDialog(this, "Invalid Name", "Error", JOptionPane.ERROR_MESSAGE);
                        }

                        if (Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z]+[.]{1}+[A-Za-z]+$", regEmailAddress.getText())) {
                            //aditta87@gmail.com
                            DbClass.pst.setString(2, regEmailAddress.getText());
                        } else if (Pattern.matches("^[a-zA-Z]+[@]{1}+[a-zA-Z]+[.]{1}+[a-zA-Z]+$", regEmailAddress.getText())) {
                            //aditta@gmail.com
                            DbClass.pst.setString(2, regEmailAddress.getText());
                        } else if (Pattern.matches("^[a-zA-Z]+[.]{1}+[a-zA-Z]+[@]{1}+[a-zA-Z]+[.]+[a-zA-Z]+$", regEmailAddress.getText())) {
                            //aditta.test@gmail.com
                            DbClass.pst.setString(2, regEmailAddress.getText());
                        } else if (Pattern.matches("^[a-zA-Z]+[.]{1}+[a-zA-Z0-9]+[@]{1}+[a-zA-Z]+[.]+[a-zA-Z]+$", regEmailAddress.getText())) {
                            //aditta.test89@gmail.com
                            DbClass.pst.setString(2, regEmailAddress.getText());
                        } else if (Pattern.matches("^[a-zA-Z]+[.]{1}+[a-zA-Z]+[.]{1}+[0-9]+[@]{1}+[a-zA-Z]+[.]+[a-zA-Z]+$", regEmailAddress.getText())) {
                            //aditta.test.89@gmail.com
                            DbClass.pst.setString(2, regEmailAddress.getText());
                        } else {
                            JOptionPane.showMessageDialog(this, "Invalid Email", "Error", JOptionPane.ERROR_MESSAGE);
                        }

                        if (Arrays.equals(regPassword.getPassword(), regConfirmPassword.getPassword())) {
                            DbClass.pst.setString(3, new String(regPassword.getPassword()));
                        } else {
                            JOptionPane.showMessageDialog(this, "Password Didn't Matched", "", JOptionPane.ERROR_MESSAGE);
                        }
                        
                        DbClass.pst.setString(4, regPhoneNumber.getText());

                        DbClass.pst.executeUpdate();

                        String q = "select id from registration where username = '" + regUsername.getText() + "' and email='" + regEmailAddress.getText() + "' and password='" + regPassword.getText() + "'";
                        DbClass.createSt();
                        DbClass.rs = DbClass.st.executeQuery(q);
                        if (DbClass.rs.next()) {
                            int userID = DbClass.rs.getInt(1);
                            String imuploadQ = "insert into PROFILEPICTURE values(?,?)";
                            DbClass.pst = DbClass.con.prepareStatement(imuploadQ);
                            DbClass.pst.setInt(1, userID);
                            DbClass.pst.setBinaryStream(2, pic, pic.available());
                            DbClass.pst.executeUpdate();
                        }
                        uniqueUsername.setText(regEmailAddress.getText());
                        password.setText(regPassword.getText());
                        JOptionPane.showMessageDialog(this, "Successfully Registered\nNow You May Login");
                    } catch (IOException | SQLException ex) {
                        JOptionPane.showMessageDialog(this, "Email & Phone Number Must Be Unique", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(this, "Error In HeadleassException & SQLException", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSignUpActionPerformed
    FileInputStream pic;
    //Picture format converting for attach image
    File fi = new File(System.getProperty("user.home") + "/Desktop/Profile Picture.png");

    int selectAndCreate() {
        JFileChooser chooser = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        chooser.setDialogTitle("Select an image");
        chooser.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG, JPG, JPEG, and GIF images", "png", "jpg", "jpeg", "gif");
        chooser.addChoosableFileFilter(filter);
        int i = chooser.showOpenDialog(null);
        if (i == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedImage bI;
                try {
                    bI = ImageIO.read(chooser.getSelectedFile());
                    BufferedImage newBI = new BufferedImage(bI.getWidth(), bI.getHeight(), bI.getType());
                    newBI.createGraphics().drawImage(bI, 0, 0, Color.WHITE, null);
                    try {
                        ImageIO.write(newBI, "png", new File(System.getProperty("user.home") + "/Desktop/Profile Picture.png"));
                    } catch (IOException e) {
                        e.getMessage();
                    }
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, "IOException Error", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (HeadlessException e) {
                JOptionPane.showMessageDialog(null, "HeadlessException Error", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        return i;
    }
    private void btnAttachImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAttachImageActionPerformed
        int i = selectAndCreate();
        if (i == JFileChooser.APPROVE_OPTION) {
            if (fi.isFile()) {
                filename = fi.getAbsolutePath();
                try {
                    pic = new FileInputStream(filename);
                } catch (FileNotFoundException e) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Picture Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                }
                ImageIcon im = new ImageIcon(filename);
                Image iimage = im.getImage();
                Image newImage = iimage.getScaledInstance(labelpic.getWidth(), labelpic.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon imicon = new ImageIcon(newImage);
                labelpic.setIcon(imicon);
                try {
                    File image = new File(filename);
                    FileInputStream fs = new FileInputStream(image);
                    ByteArrayOutputStream bos = new ByteArrayOutputStream();
                    byte[] buf = new byte[1024];
                    for (int readNum; (readNum = fs.read(buf)) != -1;) {
                        bos.write(buf, 0, readNum);
                    }
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }
        fi.delete();
    }//GEN-LAST:event_btnAttachImageActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {
            password.setEchoChar((char) 0);
        } else {
            password.setEchoChar('*');
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        //UserTypeCheck.s = usertype.getSelectedItem().toString();
        if (uniqueUsername.getText().equals("") || password.getPassword().equals("")) {
            JOptionPane.showMessageDialog(this, "All fields are required");
        } else {
            try {
                DbClass.createCon();
                //DriverManager.getConnection("jdbc:sqlite:mealDB.db", "", "");
                String query = "SELECT * FROM registration WHERE Username=? and Password=?";
                DbClass.pst = DbClass.con.prepareStatement(query);

                DbClass.pst.setString(1, uniqueUsername.getText());
                DbClass.pst.setString(2, new String(password.getPassword()));
                
                DbClass.rs = DbClass.pst.executeQuery();
                boolean flag = false;
                if (DbClass.rs.next()) {

                    //Getting user ID
                    String id = "SELECT Id FROM Registration WHERE Username = '" + uniqueUsername.getText() + "' and password = '" + this.password.getText() + "'";
                    DbClass.pst = DbClass.con.prepareStatement(id);
                    DbClass.rs = DbClass.pst.executeQuery();
                    if (DbClass.rs.next()) {
                        int userId = DbClass.rs.getInt(1);
                        //Showing welcome message & passing another jFrame
                        JOptionPane.showMessageDialog(this, "Hi " + uniqueUsername.getText() + " you are logined as ");
                        Dashboard d = new Dashboard(userId);
                        flag = true;
                        d.setVisible(true);
                        this.setVisible(false);
                    }
                } else {
                    try {
                        DbClass.createCon();
                        //con = DriverManager.getConnection("jdbc:mysql://localhost:3306/StoreAccountPassword", "root", "Adittacse97@");
                        String query2 = "SELECT * FROM Registration WHERE Email = ? and Password = ?";
                        DbClass.pst = DbClass.con.prepareStatement(query2);

                        DbClass.pst.setString(1, uniqueUsername.getText());
                        DbClass.pst.setString(2, new String(password.getPassword()));
                        
                        DbClass.rs = DbClass.pst.executeQuery();
                        if (DbClass.rs.next()) {
                            if (RememberMe.isSelected()) {
                                try {
                                    File ob = new File("LoginData/" + uniqueUsername.getText() + ".txt");
                                    PrintStream data;
                                    data = new PrintStream(ob);
                                    data.println(this.password.getText());
                                } catch (FileNotFoundException ex) {
                                    return;
                                }
                            }

                            //Getting user ID
                            String id = "SELECT Id, Username FROM Registration WHERE Email = '" + uniqueUsername.getText() + "' and password = '" + this.password.getText() + "'";
                            DbClass.pst = DbClass.con.prepareStatement(id);
                            DbClass.rs = DbClass.pst.executeQuery();
                            if (DbClass.rs.next()) {
                                int userId = DbClass.rs.getInt(1);
                                String name = DbClass.rs.getString("Username");
                                JOptionPane.showMessageDialog(this, "Hi " + name + " you are logined as ");
                                Dashboard d = new Dashboard(userId);
                                flag = true;
                                d.setVisible(true);
                                this.setVisible(false);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Invalid Login", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    } catch (HeadlessException | SQLException e) {
                        JOptionPane.showMessageDialog(this, "Email Login Error", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Login System Error", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnForgottenPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForgottenPasswordActionPerformed
        ForgottenPassword FP = new ForgottenPassword();
        FP.setVisible(true);
    }//GEN-LAST:event_btnForgottenPasswordActionPerformed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_formMousePressed
    File capture = new File(System.getProperty("user.home") + "/Desktop/Profile Picture.png");

    void CaptureImage() {
        Webcam webcam = Webcam.getDefault();
        webcam.setViewSize(new Dimension(640, 480));
        webcam.open();
        try {
            ImageIO.write(webcam.getImage(), "PNG", new File(System.getProperty("user.home") + "/Desktop/Profile Picture.png"));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "IOException Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
        webcam.close();
    }
    private void btnCaptureImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaptureImageActionPerformed
        Thread ci = new Thread(() -> {
            CaptureImage();
            if (capture.isFile()) {
                filename = capture.getAbsolutePath();
                try {
                    pic = new FileInputStream(capture.getAbsolutePath());
                } catch (FileNotFoundException e) {
                    javax.swing.JOptionPane.showMessageDialog(this, "Picture not found", "Error", JOptionPane.ERROR_MESSAGE);
                }
                ImageIcon im = new ImageIcon(filename);
                Image iimage = im.getImage();
                Image newImage = iimage.getScaledInstance(labelpic.getWidth(), labelpic.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon imicon = new ImageIcon(newImage);
                labelpic.setIcon(imicon);
                try {
                    File image = new File(filename);
                    FileInputStream fs = new FileInputStream(image);
                    ByteArrayOutputStream bos = new ByteArrayOutputStream();
                    byte[] buf = new byte[1024];
                    for (int readNum; (readNum = fs.read(buf)) != -1;) {
                        bos.write(buf, 0, readNum);
                    }
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(this, "IOException Error", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            capture.delete();
        });
        ci.start();
    }//GEN-LAST:event_btnCaptureImageActionPerformed

    private void passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFocusGained
        File ob = new File("LoginData/" + uniqueUsername.getText() + ".txt");
        try {
            Scanner search = new Scanner(ob);
            while (search.hasNext()) {
                password.setText(search.nextLine());
                //passFound.setText("Password found and pasted");
                //passFound.setForeground(Color.GREEN);
            }
        } catch (FileNotFoundException ex) {
            return;
        }
    }//GEN-LAST:event_passwordFocusGained

    /**
     */
    SignInSignOut open;

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignInSignOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.bernstein.BernsteinLookAndFeel");
        } catch (ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException e) {
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SignInSignOut().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox RememberMe;
    private javax.swing.JButton btnAttachImage;
    private javax.swing.JButton btnCaptureImage;
    private javax.swing.JButton btnForgottenPassword;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSignUp;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelpic;
    private javax.swing.JPasswordField password;
    private javax.swing.JPasswordField regConfirmPassword;
    private javax.swing.JTextField regEmailAddress;
    private javax.swing.JPasswordField regPassword;
    private javax.swing.JTextField regPhoneNumber;
    private javax.swing.JTextField regUsername;
    private javax.swing.JTextField uniqueUsername;
    // End of variables declaration//GEN-END:variables
}
